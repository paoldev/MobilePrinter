///////////////////////////////////////////////////////////////////////////////
//
// THIS FILE IS AUTOMATICALLY GENERATED.  DO NOT MODIFY IT BY HAND.
//
// 12/01/2020 11:57:04
//
///////////////////////////////////////////////////////////////////////////////

#include "pch.h"
#include "ipp_gen_types_1_1.h"
#include "ipp_attributes.h"

#if !IPP_SUPPORTS_2_0_ATTRIBUTES

namespace ipp
{
	extern const char* get_enum_description(const std::pair<int, const char*>* i_values, const size_t i_size, const int i_value);

	const std::pair<int, const char*> status_codes::description[32] =
	{
		{ 0x0000, "successful-ok" },
		{ 0x0001, "successful-ok-ignored-or-substituted-attributes" },
		{ 0x0002, "successful-ok-conflicting-attributes" },
		{ 0x0400, "client-error-bad-request" },
		{ 0x0401, "client-error-forbidden" },
		{ 0x0402, "client-error-not-authenticated" },
		{ 0x0403, "client-error-not-authorized" },
		{ 0x0404, "client-error-not-possible" },
		{ 0x0405, "client-error-timeout" },
		{ 0x0406, "client-error-not-found" },
		{ 0x0407, "client-error-gone" },
		{ 0x0408, "client-error-request-entity-too-large" },
		{ 0x0409, "client-error-request-value-too-long" },
		{ 0x040A, "client-error-document-format-not-supported" },
		{ 0x040B, "client-error-attributes-or-values-not-supported" },
		{ 0x040C, "client-error-uri-scheme-not-supported" },
		{ 0x040D, "client-error-charset-not-supported" },
		{ 0x040E, "client-error-conflicting-attributes" },
		{ 0x040F, "client-error-compression-not-supported" },
		{ 0x0410, "client-error-compression-error" },
		{ 0x0411, "client-error-document-format-error" },
		{ 0x0412, "client-error-document-access-error" },
		{ 0x0500, "server-error-internal-error" },
		{ 0x0501, "server-error-operation-not-supported" },
		{ 0x0502, "server-error-service-unavailable" },
		{ 0x0503, "server-error-version-not-supported" },
		{ 0x0504, "server-error-device-error" },
		{ 0x0505, "server-error-temporary-error" },
		{ 0x0506, "server-error-not-accepting-jobs" },
		{ 0x0507, "server-error-busy" },
		{ 0x0508, "server-error-job-canceled" },
		{ 0x0509, "server-error-multiple-document-jobs-not-supported" }
	};

	const char* status_codes::get_description(const int i_value)
	{
		return get_enum_description(&description[0], 32, i_value);
	}

	const std::pair<int, const char*> tags::description[30] =
	{
		{ 0x00, "begin-attribute-group-tag" },
		{ 0x01, "operation-attributes-tag" },
		{ 0x02, "job-attributes-tag" },
		{ 0x03, "end-of-attributes-tag" },
		{ 0x04, "printer-attributes-tag" },
		{ 0x05, "unsupported-attributes-tag" },
		{ 0x10, "unsupported" },
		{ 0x12, "unknown" },
		{ 0x13, "no-value" },
		{ 0x21, "integer" },
		{ 0x22, "boolean" },
		{ 0x23, "enum-tag" },
		{ 0x30, "octetString" },
		{ 0x31, "dateTime" },
		{ 0x32, "resolution" },
		{ 0x33, "rangeOfInteger" },
		{ 0x34, "begCollection" },
		{ 0x35, "textWithLanguage" },
		{ 0x36, "nameWithLanguage" },
		{ 0x37, "endCollection" },
		{ 0x41, "textWithoutLanguage" },
		{ 0x42, "nameWithoutLanguage" },
		{ 0x44, "keyword" },
		{ 0x45, "uri" },
		{ 0x46, "uriScheme" },
		{ 0x47, "charset" },
		{ 0x48, "naturalLanguage" },
		{ 0x49, "mimeMediaType" },
		{ 0x4A, "memberAttrName" },
		{ 0x7F, "extension" }
	};

	const char* tags::get_description(const int i_value)
	{
		return get_enum_description(&description[0], 30, i_value);
	}

	const std::pair<int, const char*> finishings::description[19] =
	{
		{ 3, "none" },
		{ 4, "staple" },
		{ 5, "punch" },
		{ 6, "cover" },
		{ 7, "bind" },
		{ 8, "saddle-stitch" },
		{ 9, "edge-stitch" },
		{ 20, "staple-top-left" },
		{ 21, "staple-bottom-left" },
		{ 22, "staple-top-right" },
		{ 23, "staple-bottom-right" },
		{ 24, "edge-stitch-left" },
		{ 25, "edge-stitch-top" },
		{ 26, "edge-stitch-right" },
		{ 27, "edge-stitch-bottom" },
		{ 28, "staple-dual-left" },
		{ 29, "staple-dual-top" },
		{ 30, "staple-dual-right" },
		{ 31, "staple-dual-bottom" }
	};

	const char* finishings::get_description(const int i_value)
	{
		return get_enum_description(&description[0], 19, i_value);
	}

	const std::pair<int, const char*> job_state::description[7] =
	{
		{ 3, "pending" },
		{ 4, "pending-held" },
		{ 5, "processing" },
		{ 6, "processing-stopped" },
		{ 7, "canceled" },
		{ 8, "aborted" },
		{ 9, "completed" }
	};

	const char* job_state::get_description(const int i_value)
	{
		return get_enum_description(&description[0], 7, i_value);
	}

	const std::pair<int, const char*> operations::description[16] =
	{
		{ 0x0002, "Print-Job" },
		{ 0x0003, "Print-URI" },
		{ 0x0004, "Validate-Job" },
		{ 0x0005, "Create-Job" },
		{ 0x0006, "Send-Document" },
		{ 0x0007, "Send-URI" },
		{ 0x0008, "Cancel-Job" },
		{ 0x0009, "Get-Job-Attributes" },
		{ 0x000A, "Get-Jobs" },
		{ 0x000B, "Get-Printer-Attributes" },
		{ 0x000C, "Hold-Job" },
		{ 0x000D, "Release-Job" },
		{ 0x000E, "Restart-Job" },
		{ 0x0010, "Pause-Printer" },
		{ 0x0011, "Resume-Printer" },
		{ 0x0012, "Purge-Jobs" }
	};

	const char* operations::get_description(const int i_value)
	{
		return get_enum_description(&description[0], 16, i_value);
	}

	const std::pair<int, const char*> orientation_requested::description[4] =
	{
		{ 3, "portrait" },
		{ 4, "landscape" },
		{ 5, "reverse-landscape" },
		{ 6, "reverse-portrait" }
	};

	const char* orientation_requested::get_description(const int i_value)
	{
		return get_enum_description(&description[0], 4, i_value);
	}

	const std::pair<int, const char*> print_quality::description[3] =
	{
		{ 3, "draft" },
		{ 4, "normal" },
		{ 5, "high" }
	};

	const char* print_quality::get_description(const int i_value)
	{
		return get_enum_description(&description[0], 3, i_value);
	}

	const std::pair<int, const char*> printer_state::description[3] =
	{
		{ 3, "idle" },
		{ 4, "processing" },
		{ 5, "stopped" }
	};

	const char* printer_state::get_description(const int i_value)
	{
		return get_enum_description(&description[0], 3, i_value);
	}
	const char* s_compression_keywords[4] = {
		"compress",
		"deflate",
		"gzip",
		"none"
	};

	const char* s_ipp_versions_keywords[2] = {
		"1.0",
		"1.1"
	};

	const char* s_job_hold_until_keywords[8] = {
		"day-time",
		"evening",
		"indefinite",
		"night",
		"no-hold",
		"second-shift",
		"third-shift",
		"weekend"
	};

	const char* s_job_sheets_keywords[2] = {
		"none",
		"standard"
	};

	const char* s_job_state_reasons_keywords[30] = {
		"aborted-by-system",
		"compression-error",
		"document-access-error",
		"document-format-error",
		"job-canceled-at-device",
		"job-canceled-by-operator",
		"job-canceled-by-user",
		"job-completed-successfully",
		"job-completed-with-errors",
		"job-completed-with-warnings",
		"job-data-insufficient",
		"job-hold-until-specified",
		"job-incoming",
		"job-interpreting",
		"job-outgoing",
		"job-printing",
		"job-queued",
		"job-queued-for-marker",
		"job-restartable",
		"job-transforming",
		"none",
		"printer-stopped",
		"printer-stopped-partly",
		"processing-to-stop-point",
		"queued-in-device",
		"resources-are-not-ready",
		"service-off-line",
		"submission-interrupted",
		"unsupported-compression",
		"unsupported-document-format"
	};

	const char* s_media_keywords[302] = {
		"a",
		"a-translucent",
		"a-transparent",
		"a-white",
		"arch-a",
		"arch-a-translucent",
		"arch-a-transparent",
		"arch-a-white",
		"arch-axsynchro-translucent",
		"arch-axsynchro-transparent",
		"arch-axsynchro-white",
		"arch-b",
		"arch-b-translucent",
		"arch-b-transparent",
		"arch-b-white",
		"arch-bxsynchro-translucent",
		"arch-bxsynchro-transparent",
		"arch-bxsynchro-white",
		"arch-c",
		"arch-c-translucent",
		"arch-c-transparent",
		"arch-c-white",
		"arch-cxsynchro-translucent",
		"arch-cxsynchro-transparent",
		"arch-cxsynchro-white",
		"arch-d",
		"arch-d-translucent",
		"arch-d-transparent",
		"arch-d-white",
		"arch-dxsynchro-translucent",
		"arch-dxsynchro-transparent",
		"arch-dxsynchro-white",
		"arch-e",
		"arch-e-translucent",
		"arch-e-transparent",
		"arch-e-white",
		"arch-exsynchro-translucent",
		"arch-exsynchro-transparent",
		"arch-exsynchro-white",
		"auto-fixed-size-translucent",
		"auto-fixed-size-transparent",
		"auto-fixed-size-white",
		"auto-synchro-translucent",
		"auto-synchro-transparent",
		"auto-synchro-white",
		"auto-translucent",
		"auto-transparent",
		"auto-white",
		"axsynchro-translucent",
		"axsynchro-transparent",
		"axsynchro-white",
		"b",
		"b-translucent",
		"b-transparent",
		"b-white",
		"bottom",
		"bxsynchro-translucent",
		"bxsynchro-transparent",
		"bxsynchro-white",
		"c",
		"c-translucent",
		"c-transparent",
		"c-white",
		"cxsynchro-translucent",
		"cxsynchro-transparent",
		"cxsynchro-white",
		"d",
		"d-translucent",
		"d-transparent",
		"d-white",
		"default",
		"dxsynchro-translucent",
		"dxsynchro-transparent",
		"dxsynchro-white",
		"e",
		"e-translucent",
		"e-transparent",
		"e-white",
		"envelope",
		"executive",
		"executive-white",
		"exsynchro-translucent",
		"exsynchro-transparent",
		"exsynchro-white",
		"folio",
		"folio-white",
		"invoice",
		"invoice-white",
		"iso-a0",
		"iso-a0-translucent",
		"iso-a0-transparent",
		"iso-a0-white",
		"iso-a0xsynchro-translucent",
		"iso-a0xsynchro-transparent",
		"iso-a0xsynchro-white",
		"iso-a1",
		"iso-a1-translucent",
		"iso-a1-transparent",
		"iso-a1-white",
		"iso-a1x3-translucent",
		"iso-a1x3-transparent",
		"iso-a1x3-white",
		"iso-a1x4-translucent",
		"iso-a1x4-transparent",
		"iso-a1x4-white",
		"iso-a1xsynchro-translucent",
		"iso-a1xsynchro-transparent",
		"iso-a1xsynchro-white",
		"iso-a2",
		"iso-a2-translucent",
		"iso-a2-transparent",
		"iso-a2-white",
		"iso-a2x3-translucent",
		"iso-a2x3-transparent",
		"iso-a2x3-white",
		"iso-a2x4-translucent",
		"iso-a2x4-transparent",
		"iso-a2x4-white",
		"iso-a2x5-translucent",
		"iso-a2x5-transparent",
		"iso-a2x5-white",
		"iso-a2xsynchro-translucent",
		"iso-a2xsynchro-transparent",
		"iso-a2xsynchro-white",
		"iso-a3",
		"iso-a3-colored",
		"iso-a3-translucent",
		"iso-a3-transparent",
		"iso-a3-white",
		"iso-a3x3-translucent",
		"iso-a3x3-transparent",
		"iso-a3x3-white",
		"iso-a3x4-translucent",
		"iso-a3x4-transparent",
		"iso-a3x4-white",
		"iso-a3x5-translucent",
		"iso-a3x5-transparent",
		"iso-a3x5-white",
		"iso-a3x6-translucent",
		"iso-a3x6-transparent",
		"iso-a3x6-white",
		"iso-a3x7-translucent",
		"iso-a3x7-transparent",
		"iso-a3x7-white",
		"iso-a3xsynchro-translucent",
		"iso-a3xsynchro-transparent",
		"iso-a3xsynchro-white",
		"iso-a4",
		"iso-a4-colored",
		"iso-a4-translucent",
		"iso-a4-transparent",
		"iso-a4-white",
		"iso-a4x3-translucent",
		"iso-a4x3-transparent",
		"iso-a4x3-white",
		"iso-a4x4-translucent",
		"iso-a4x4-transparent",
		"iso-a4x4-white",
		"iso-a4x5-translucent",
		"iso-a4x5-transparent",
		"iso-a4x5-white",
		"iso-a4x6-translucent",
		"iso-a4x6-transparent",
		"iso-a4x6-white",
		"iso-a4x7-translucent",
		"iso-a4x7-transparent",
		"iso-a4x7-white",
		"iso-a4x8-translucent",
		"iso-a4x8-transparent",
		"iso-a4x8-white",
		"iso-a4x9-translucent",
		"iso-a4x9-transparent",
		"iso-a4x9-white",
		"iso-a4xsynchro-translucent",
		"iso-a4xsynchro-transparent",
		"iso-a4xsynchro-white",
		"iso-a5",
		"iso-a5-colored",
		"iso-a5-translucent",
		"iso-a5-transparent",
		"iso-a5-white",
		"iso-a6",
		"iso-a6-white",
		"iso-a7",
		"iso-a7-white",
		"iso-a8",
		"iso-a8-white",
		"iso-a9",
		"iso-a9-white",
		"iso-a10",
		"iso-a10-white",
		"iso-b0",
		"iso-b0-white",
		"iso-b1",
		"iso-b1-white",
		"iso-b2",
		"iso-b2-white",
		"iso-b3",
		"iso-b3-white",
		"iso-b4",
		"iso-b4-colored",
		"iso-b4-envelope",
		"iso-b4-white",
		"iso-b5",
		"iso-b5-colored",
		"iso-b5-envelope",
		"iso-b5-white",
		"iso-b6",
		"iso-b6-white",
		"iso-b7",
		"iso-b7-white",
		"iso-b8",
		"iso-b8-white",
		"iso-b9",
		"iso-b9-white",
		"iso-b10",
		"iso-b10-white",
		"iso-c3",
		"iso-c3-envelope",
		"iso-c4",
		"iso-c4-envelope",
		"iso-c5",
		"iso-c5-envelope",
		"iso-c6",
		"iso-c6-envelope",
		"iso-designated-long",
		"iso-designated-long-envelope",
		"jis-b0",
		"jis-b0-translucent",
		"jis-b0-transparent",
		"jis-b0-white",
		"jis-b1",
		"jis-b1-translucent",
		"jis-b1-transparent",
		"jis-b1-white",
		"jis-b2",
		"jis-b2-translucent",
		"jis-b2-transparent",
		"jis-b2-white",
		"jis-b3",
		"jis-b3-translucent",
		"jis-b3-transparent",
		"jis-b3-white",
		"jis-b4",
		"jis-b4-colored",
		"jis-b4-translucent",
		"jis-b4-transparent",
		"jis-b4-white",
		"jis-b5",
		"jis-b5-colored",
		"jis-b5-translucent",
		"jis-b5-transparent",
		"jis-b5-white",
		"jis-b6",
		"jis-b6-white",
		"jis-b7",
		"jis-b7-white",
		"jis-b8",
		"jis-b8-white",
		"jis-b9",
		"jis-b9-white",
		"jis-b10",
		"jis-b10-white",
		"large-capacity",
		"ledger",
		"ledger-white",
		"main",
		"manual",
		"middle",
		"monarch",
		"monarch-envelope",
		"na-5x7",
		"na-6x9",
		"na-6x9-envelope",
		"na-7x9",
		"na-7x9-envelope",
		"na-8x10",
		"na-9x11",
		"na-9x11-envelope",
		"na-9x12",
		"na-9x12-envelope",
		"na-10x13",
		"na-10x13-envelope",
		"na-10x14",
		"na-10x14-envelope",
		"na-10x15",
		"na-10x15-envelope",
		"na-legal",
		"na-legal-colored",
		"na-legal-white",
		"na-letter",
		"na-letter-colored",
		"na-letter-transparent",
		"na-letter-white",
		"na-number-9",
		"na-number-9-envelope",
		"na-number-10",
		"na-number-10-envelope",
		"quarto",
		"quarto-white",
		"side",
		"top"
	};

	const char* s_multiple_document_handling_keywords[4] = {
		"separate-documents-collated-copies",
		"separate-documents-uncollated-copies",
		"single-document",
		"single-document-new-sheet"
	};

	const char* s_pdl_override_keywords[2] = {
		"attempted",
		"not-attempted"
	};

	const char* s_printer_state_reasons_keywords[34] = {
		"connecting-to-device",
		"cover-open",
		"developer-empty",
		"developer-low",
		"door-open",
		"fuser-over-temp",
		"fuser-under-temp",
		"input-tray-missing",
		"interlock-open",
		"interpreter-resource-unavailable",
		"marker-supply-empty",
		"marker-supply-low",
		"marker-waste-almost-full",
		"marker-waste-full",
		"media-empty",
		"media-jam",
		"media-low",
		"media-needed",
		"moving-to-paused",
		"none",
		"opc-life-over",
		"opc-near-eol",
		"other",
		"output-area-almost-full",
		"output-area-full",
		"output-tray-missing",
		"paused",
		"shutdown",
		"spool-area-full",
		"stopped-partly",
		"stopping",
		"timed-out",
		"toner-empty",
		"toner-low"
	};

	const char* s_requested_attributes_keywords[4] = {
		"all",
		"job-description",
		"job-template",
		"printer-description"
	};

	const char* s_sides_keywords[3] = {
		"one-sided",
		"two-sided-long-edge",
		"two-sided-short-edge"
	};

	const char* s_uri_authentication_keywords[5] = {
		"basic",
		"certificate",
		"digest",
		"none",
		"requesting-user-name"
	};

	const char* s_uri_security_keywords[3] = {
		"none",
		"ssl3",
		"tls"
	};

	const char* s_which_jobs_keywords[2] = {
		"completed",
		"not-completed"
	};

	const char* s_xri_authentication_keywords[5] = {
		"basic",
		"certificate",
		"digest",
		"none",
		"requesting-user-name"
	};

	const char* s_xri_security_keywords[3] = {
		"none",
		"ssl3",
		"tls"
	};

	const char* s_epcl_version_keywords[1] = {
		"1.0"
	};

	const char* s_marker_types_keywords[30] = {
		"toner",
		"waste-toner",
		"ink",
		"ink-cartridge",
		"ink-ribbon",
		"waste-ink",
		"opc",
		"developer",
		"fuser-oil",
		"solid-wax",
		"ribbon-wax",
		"waste-wax",
		"fuser",
		"corona-wire",
		"fuser-oil-wick",
		"cleaner-unit",
		"fuser-cleaning-pad",
		"transfer-unit",
		"toner-cartridge",
		"fuser-oiler",
		"water",
		"waste-water",
		"binding-supply",
		"banding-supply",
		"stiching-wire",
		"shrink-wrap",
		"paper-wrap",
		"staples",
		"inserts",
		"covers"
	};

	const char* s_media_size_name_keywords[67] = {
		"a",
		"arch-a",
		"arch-b",
		"arch-c",
		"arch-d",
		"arch-e",
		"b",
		"c",
		"d",
		"e",
		"executive",
		"folio",
		"invoice",
		"iso-a0",
		"iso-a1",
		"iso-a2",
		"iso-a3",
		"iso-a4",
		"iso-a5",
		"iso-a6",
		"iso-a7",
		"iso-a8",
		"iso-a9",
		"iso-a10",
		"iso-b0",
		"iso-b1",
		"iso-b2",
		"iso-b3",
		"iso-b4",
		"iso-b5",
		"iso-b6",
		"iso-b7",
		"iso-b8",
		"iso-b9",
		"iso-b10",
		"iso-c3",
		"iso-c4",
		"iso-c5",
		"iso-c6",
		"iso-designated-long",
		"jis-b0",
		"jis-b1",
		"jis-b2",
		"jis-b3",
		"jis-b4",
		"jis-b5",
		"jis-b6",
		"jis-b7",
		"jis-b8",
		"jis-b9",
		"jis-b10",
		"ledger",
		"monarch",
		"na-5x7",
		"na-6x9",
		"na-7x9",
		"na-8x10",
		"na-9x11",
		"na-9x12",
		"na-10x13",
		"na-10x14",
		"na-10x15",
		"na-legal",
		"na-letter",
		"na-number-9",
		"na-number-10",
		"quarto"
	};

	const char* s_media_media_name_keywords[210] = {
		"a-translucent",
		"a-transparent",
		"a-white",
		"arch-a-translucent",
		"arch-a-transparent",
		"arch-a-white",
		"arch-axsynchro-translucent",
		"arch-axsynchro-transparent",
		"arch-axsynchro-white",
		"arch-b-translucent",
		"arch-b-transparent",
		"arch-b-white",
		"arch-bxsynchro-translucent",
		"arch-bxsynchro-transparent",
		"arch-bxsynchro-white",
		"arch-c-translucent",
		"arch-c-transparent",
		"arch-c-white",
		"arch-cxsynchro-translucent",
		"arch-cxsynchro-transparent",
		"arch-cxsynchro-white",
		"arch-d-translucent",
		"arch-d-transparent",
		"arch-d-white",
		"arch-dxsynchro-translucent",
		"arch-dxsynchro-transparent",
		"arch-dxsynchro-white",
		"arch-e-translucent",
		"arch-e-transparent",
		"arch-e-white",
		"arch-exsynchro-translucent",
		"arch-exsynchro-transparent",
		"arch-exsynchro-white",
		"auto-fixed-size-translucent",
		"auto-fixed-size-transparent",
		"auto-fixed-size-white",
		"auto-synchro-translucent",
		"auto-synchro-transparent",
		"auto-synchro-white",
		"auto-translucent",
		"auto-transparent",
		"auto-white",
		"axsynchro-translucent",
		"axsynchro-transparent",
		"axsynchro-white",
		"b-translucent",
		"b-transparent",
		"b-white",
		"bxsynchro-translucent",
		"bxsynchro-transparent",
		"bxsynchro-white",
		"c-translucent",
		"c-transparent",
		"c-white",
		"cxsynchro-translucent",
		"cxsynchro-transparent",
		"cxsynchro-white",
		"d-translucent",
		"d-transparent",
		"d-white",
		"default",
		"dxsynchro-translucent",
		"dxsynchro-transparent",
		"dxsynchro-white",
		"e-translucent",
		"e-transparent",
		"e-white",
		"executive-white",
		"exsynchro-translucent",
		"exsynchro-transparent",
		"exsynchro-white",
		"folio-white",
		"invoice-white",
		"iso-a0-translucent",
		"iso-a0-transparent",
		"iso-a0-white",
		"iso-a0xsynchro-translucent",
		"iso-a0xsynchro-transparent",
		"iso-a0xsynchro-white",
		"iso-a1-translucent",
		"iso-a1-transparent",
		"iso-a1-white",
		"iso-a1x3-translucent",
		"iso-a1x3-transparent",
		"iso-a1x3-white",
		"iso-a1x4-translucent",
		"iso-a1x4-transparent",
		"iso-a1x4-white",
		"iso-a1xsynchro-translucent",
		"iso-a1xsynchro-transparent",
		"iso-a1xsynchro-white",
		"iso-a2-translucent",
		"iso-a2-transparent",
		"iso-a2-white",
		"iso-a2x3-translucent",
		"iso-a2x3-transparent",
		"iso-a2x3-white",
		"iso-a2x4-translucent",
		"iso-a2x4-transparent",
		"iso-a2x4-white",
		"iso-a2x5-translucent",
		"iso-a2x5-transparent",
		"iso-a2x5-white",
		"iso-a2xsynchro-translucent",
		"iso-a2xsynchro-transparent",
		"iso-a2xsynchro-white",
		"iso-a3-colored",
		"iso-a3-translucent",
		"iso-a3-transparent",
		"iso-a3-white",
		"iso-a3x3-translucent",
		"iso-a3x3-transparent",
		"iso-a3x3-white",
		"iso-a3x4-translucent",
		"iso-a3x4-transparent",
		"iso-a3x4-white",
		"iso-a3x5-translucent",
		"iso-a3x5-transparent",
		"iso-a3x5-white",
		"iso-a3x6-translucent",
		"iso-a3x6-transparent",
		"iso-a3x6-white",
		"iso-a3x7-translucent",
		"iso-a3x7-transparent",
		"iso-a3x7-white",
		"iso-a3xsynchro-translucent",
		"iso-a3xsynchro-transparent",
		"iso-a3xsynchro-white",
		"iso-a4-colored",
		"iso-a4-translucent",
		"iso-a4-transparent",
		"iso-a4-white",
		"iso-a4x3-translucent",
		"iso-a4x3-transparent",
		"iso-a4x3-white",
		"iso-a4x4-translucent",
		"iso-a4x4-transparent",
		"iso-a4x4-white",
		"iso-a4x5-translucent",
		"iso-a4x5-transparent",
		"iso-a4x5-white",
		"iso-a4x6-translucent",
		"iso-a4x6-transparent",
		"iso-a4x6-white",
		"iso-a4x7-translucent",
		"iso-a4x7-transparent",
		"iso-a4x7-white",
		"iso-a4x8-translucent",
		"iso-a4x8-transparent",
		"iso-a4x8-white",
		"iso-a4x9-translucent",
		"iso-a4x9-transparent",
		"iso-a4x9-white",
		"iso-a4xsynchro-translucent",
		"iso-a4xsynchro-transparent",
		"iso-a4xsynchro-white",
		"iso-a5-colored",
		"iso-a5-translucent",
		"iso-a5-transparent",
		"iso-a5-white",
		"iso-a6-white",
		"iso-a7-white",
		"iso-a8-white",
		"iso-a9-white",
		"iso-a10-white",
		"iso-b0-white",
		"iso-b1-white",
		"iso-b2-white",
		"iso-b3-white",
		"iso-b4-colored",
		"iso-b4-white",
		"iso-b5-colored",
		"iso-b5-white",
		"iso-b6-white",
		"iso-b7-white",
		"iso-b8-white",
		"iso-b9-white",
		"iso-b10-white",
		"jis-b0-translucent",
		"jis-b0-transparent",
		"jis-b0-white",
		"jis-b1-translucent",
		"jis-b1-transparent",
		"jis-b1-white",
		"jis-b2-translucent",
		"jis-b2-transparent",
		"jis-b2-white",
		"jis-b3-translucent",
		"jis-b3-transparent",
		"jis-b3-white",
		"jis-b4-colored",
		"jis-b4-translucent",
		"jis-b4-transparent",
		"jis-b4-white",
		"jis-b5-colored",
		"jis-b5-translucent",
		"jis-b5-transparent",
		"jis-b5-white",
		"jis-b6-white",
		"jis-b7-white",
		"jis-b8-white",
		"jis-b9-white",
		"jis-b10-white",
		"ledger-white",
		"na-legal-colored",
		"na-legal-white",
		"na-letter-colored",
		"na-letter-transparent",
		"na-letter-white",
		"quarto-white"
	};

	const char* s_media_input_tray_keywords[8] = {
		"bottom",
		"envelope",
		"large-capacity",
		"main",
		"manual",
		"middle",
		"side",
		"top"
	};

	const char* s_media_envelope_name_keywords[17] = {
		"iso-b4-envelope",
		"iso-b5-envelope",
		"iso-c3-envelope",
		"iso-c4-envelope",
		"iso-c5-envelope",
		"iso-c6-envelope",
		"iso-designated-long-envelope",
		"monarch-envelope",
		"na-6x9-envelope",
		"na-7x9-envelope",
		"na-9x11-envelope",
		"na-9x12-envelope",
		"na-10x13-envelope",
		"na-10x14-envelope",
		"na-10x15-envelope",
		"na-number-9-envelope",
		"na-number-10-envelope"
	};

	const char* s_status_codes_keywords[32] = {
		"successful-ok",
		"successful-ok-ignored-or-substituted-attributes",
		"successful-ok-conflicting-attributes",
		"client-error-bad-request",
		"client-error-forbidden",
		"client-error-not-authenticated",
		"client-error-not-authorized",
		"client-error-not-possible",
		"client-error-timeout",
		"client-error-not-found",
		"client-error-gone",
		"client-error-request-entity-too-large",
		"client-error-request-value-too-long",
		"client-error-document-format-not-supported",
		"client-error-attributes-or-values-not-supported",
		"client-error-uri-scheme-not-supported",
		"client-error-charset-not-supported",
		"client-error-conflicting-attributes",
		"client-error-compression-not-supported",
		"client-error-compression-error",
		"client-error-document-format-error",
		"client-error-document-access-error",
		"server-error-internal-error",
		"server-error-operation-not-supported",
		"server-error-service-unavailable",
		"server-error-version-not-supported",
		"server-error-device-error",
		"server-error-temporary-error",
		"server-error-not-accepting-jobs",
		"server-error-busy",
		"server-error-job-canceled",
		"server-error-multiple-document-jobs-not-supported"
	};

	const char* s_tags_keywords[30] = {
		"begin-attribute-group-tag",
		"operation-attributes-tag",
		"job-attributes-tag",
		"end-of-attributes-tag",
		"printer-attributes-tag",
		"unsupported-attributes-tag",
		"unsupported",
		"unknown",
		"no-value",
		"integer",
		"boolean",
		"enum-tag",
		"octetString",
		"dateTime",
		"resolution",
		"rangeOfInteger",
		"begCollection",
		"textWithLanguage",
		"nameWithLanguage",
		"endCollection",
		"textWithoutLanguage",
		"nameWithoutLanguage",
		"keyword",
		"uri",
		"uriScheme",
		"charset",
		"naturalLanguage",
		"mimeMediaType",
		"memberAttrName",
		"extension"
	};

	const char* s_finishings_keywords[19] = {
		"none",
		"staple",
		"punch",
		"cover",
		"bind",
		"saddle-stitch",
		"edge-stitch",
		"staple-top-left",
		"staple-bottom-left",
		"staple-top-right",
		"staple-bottom-right",
		"edge-stitch-left",
		"edge-stitch-top",
		"edge-stitch-right",
		"edge-stitch-bottom",
		"staple-dual-left",
		"staple-dual-top",
		"staple-dual-right",
		"staple-dual-bottom"
	};

	const char* s_job_state_keywords[7] = {
		"pending",
		"pending-held",
		"processing",
		"processing-stopped",
		"canceled",
		"aborted",
		"completed"
	};

	const char* s_operations_keywords[16] = {
		"Print-Job",
		"Print-URI",
		"Validate-Job",
		"Create-Job",
		"Send-Document",
		"Send-URI",
		"Cancel-Job",
		"Get-Job-Attributes",
		"Get-Jobs",
		"Get-Printer-Attributes",
		"Hold-Job",
		"Release-Job",
		"Restart-Job",
		"Pause-Printer",
		"Resume-Printer",
		"Purge-Jobs"
	};

	const char* s_orientation_requested_keywords[4] = {
		"portrait",
		"landscape",
		"reverse-landscape",
		"reverse-portrait"
	};

	const char* s_print_quality_keywords[3] = {
		"draft",
		"normal",
		"high"
	};

	const char* s_printer_state_keywords[3] = {
		"idle",
		"processing",
		"stopped"
	};

	const char* s_cover_back_keywords[1] = {
		"media"
	};

	const char* s_cover_front_keywords[1] = {
		"media"
	};

	const char* s_insert_sheet_keywords[1] = {
		"media"
	};

	const char* s_job_accounting_sheets_keywords[1] = {
		"media"
	};

	const char* s_separator_sheets_keywords[1] = {
		"media"
	};

#define ADD_BOOLEAN(root_, name_, tag_, Array_, NoValue_, Unknown_)				AttributeRegistry::add_boolean(root_, name_, tag_, Array_, NoValue_, Unknown_)
#define ADD_INTEGER(root_, name_, tag_, Min_, Max_, Array_, NoValue_, Unknown_)	AttributeRegistry::add_integer(root_, name_, tag_, Min_, Max_, Array_, NoValue_, Unknown_)
#define ADD_KEYWORD(root_, name_, tag_, Max_, Array_, NoValue_, Unknown_, Enum_)	AttributeRegistry::add_keyword(root_, name_, tag_, Max_, Array_, NoValue_, Unknown_, Enum_, _countof(Enum_))
#define ADD_ENUM(root_, name_, tag_, Array_, NoValue_, Unknown_, Enum_)			AttributeRegistry::add_enum(root_, name_, tag_, Array_, NoValue_, Unknown_, Enum_, _countof(Enum_))
#define ADD_RANGE(root_, name_, tag_, Min_, Max_, Array_, NoValue_, Unknown_)		AttributeRegistry::add_rangeOfInteger(root_, name_, tag_, Min_, Max_, Array_, NoValue_, Unknown_)
#define ADD_RESOLUTION(root_, name_, tag_, Array_, NoValue_, Unknown_)				AttributeRegistry::add_resolution(root_, name_, tag_, Array_, NoValue_, Unknown_)
#define ADD_STRING(root_, name_, tag_, Max_, Array_, NoValue_, Unknown_)			AttributeRegistry::add_string(root_, name_, tag_, Max_, Array_, NoValue_, Unknown_)
#define ADD_DATETIME(root_, name_, tag_, Array_, NoValue_, Unknown_)				AttributeRegistry::add_datetime(root_, name_, tag_, Array_, NoValue_, Unknown_)
#define BEGIN_COLLECTION(root_, name_, tag_, Array_, NoValue_, Unknown_)			AttributeRegistry::add_collection(root_, name_, tag_, Array_, NoValue_, Unknown_)
#define END_COLLECTION(...)	(void)0

	void init_attributes()
	{
		ADD_STRING("Job Description", "job-message-from-operator", tags::textWithoutLanguage, 127, false, false, false);
		ADD_STRING("Job Description", "job-name", tags::nameWithoutLanguage, NAME_MAX, false, false, false);
		ADD_STRING("Job Status", "attributes-charset", tags::charset, CHARSET_MAX, false, false, false);
		ADD_STRING("Job Status", "attributes-natural-language", tags::naturalLanguage, NATURAL_LANGUAGE_MAX, false, false, false);
		ADD_DATETIME("Job Status", "date-time-at-completed", tags::dateTime, false, true, false);
		ADD_DATETIME("Job Status", "date-time-at-creation", tags::dateTime, false, false, false);
		ADD_DATETIME("Job Status", "date-time-at-processing", tags::dateTime, false, true, false);
		ADD_STRING("Job Status", "job-detailed-status-messages", tags::textWithoutLanguage, TEXT_MAX, true, false, false);
		ADD_STRING("Job Status", "job-document-access-errors", tags::textWithoutLanguage, TEXT_MAX, true, false, false);
		ADD_INTEGER("Job Status", "job-id", tags::integer, 1, INT_MAX, false, false, false);
		ADD_INTEGER("Job Status", "job-impressions", tags::integer, 0, INT_MAX, false, false, false);
		ADD_INTEGER("Job Status", "job-impressions-completed", tags::integer, 0, INT_MAX, false, false, false);
		ADD_INTEGER("Job Status", "job-k-octets", tags::integer, 0, INT_MAX, false, false, false);
		ADD_INTEGER("Job Status", "job-k-octets-processed", tags::integer, 0, INT_MAX, false, false, false);
		ADD_INTEGER("Job Status", "job-media-sheets", tags::integer, 0, INT_MAX, false, false, false);
		ADD_INTEGER("Job Status", "job-media-sheets-completed", tags::integer, 0, INT_MAX, false, false, false);
		ADD_STRING("Job Status", "job-more-info", tags::uri, URI_MAX, false, false, false);
		ADD_STRING("Job Status", "job-originating-user-name", tags::nameWithoutLanguage, NAME_MAX, false, false, false);
		ADD_INTEGER("Job Status", "job-printer-up-time", tags::integer, 1, INT_MAX, false, false, false);
		ADD_STRING("Job Status", "job-printer-uri", tags::uri, URI_MAX, false, false, false);
		ADD_ENUM("Job Status", "job-state", tags::enum_tag, false, false, true, ipp::job_state::description);
		ADD_STRING("Job Status", "job-state-message", tags::textWithoutLanguage, TEXT_MAX, false, false, false);
		ADD_KEYWORD("Job Status", "job-state-reasons", tags::keyword, KEYWORD_MAX, true, false, false, ipp::s_job_state_reasons_keywords);
		ADD_STRING("Job Status", "job-uri", tags::uri, URI_MAX, false, false, false);
		ADD_INTEGER("Job Status", "number-of-documents", tags::integer, 0, INT_MAX, false, false, false);
		ADD_INTEGER("Job Status", "number-of-intervening-jobs", tags::integer, 0, INT_MAX, false, false, false);
		ADD_STRING("Job Status", "output-device-assigned", tags::nameWithoutLanguage, 127, false, false, false);
		ADD_INTEGER("Job Status", "time-at-completed", tags::integer, INT_MIN, INT_MAX, false, true, false);
		ADD_INTEGER("Job Status", "time-at-creation", tags::integer, INT_MIN, INT_MAX, false, false, false);
		ADD_INTEGER("Job Status", "time-at-processing", tags::integer, INT_MIN, INT_MAX, false, true, false);
		ADD_INTEGER("Job Template", "copies", tags::integer, 1, INT_MAX, false, false, false);
		BEGIN_COLLECTION("Job Template", "cover-back", tags::begCollection, false, false, false);
			ADD_KEYWORD("Job Template", "cover-back.media", tags::keyword, NAME_MAX, false, false, false, ipp::s_media_keywords);
		END_COLLECTION();
		BEGIN_COLLECTION("Job Template", "cover-front", tags::begCollection, false, false, false);
			ADD_KEYWORD("Job Template", "cover-front.media", tags::keyword, NAME_MAX, false, false, false, ipp::s_media_keywords);
		END_COLLECTION();
		ADD_ENUM("Job Template", "finishings", tags::enum_tag, true, false, false, ipp::finishings::description);
		BEGIN_COLLECTION("Job Template", "insert-sheet", tags::begCollection, true, false, false);
			ADD_KEYWORD("Job Template", "insert-sheet.media", tags::keyword, NAME_MAX, false, false, false, ipp::s_media_keywords);
		END_COLLECTION();
		BEGIN_COLLECTION("Job Template", "job-accounting-sheets", tags::begCollection, false, false, false);
			ADD_KEYWORD("Job Template", "job-accounting-sheets.media", tags::keyword, NAME_MAX, false, false, false, ipp::s_media_keywords);
		END_COLLECTION();
		ADD_KEYWORD("Job Template", "job-hold-until", tags::keyword, NAME_MAX, false, false, false, ipp::s_job_hold_until_keywords);
		ADD_INTEGER("Job Template", "job-priority", tags::integer, 1, 100, false, false, false);
		ADD_KEYWORD("Job Template", "job-sheets", tags::keyword, NAME_MAX, false, false, false, ipp::s_job_sheets_keywords);
		ADD_KEYWORD("Job Template", "media", tags::keyword, NAME_MAX, false, false, false, ipp::s_media_keywords);
		ADD_KEYWORD("Job Template", "multiple-document-handling", tags::keyword, KEYWORD_MAX, false, false, false, ipp::s_multiple_document_handling_keywords);
		ADD_INTEGER("Job Template", "number-up", tags::integer, 1, INT_MAX, false, false, false);
		ADD_ENUM("Job Template", "orientation-requested", tags::enum_tag, false, false, false, ipp::orientation_requested::description);
		ADD_RANGE("Job Template", "page-ranges", tags::rangeOfInteger, 1, INT_MAX, true, false, false);
		ADD_ENUM("Job Template", "print-quality", tags::enum_tag, false, false, false, ipp::print_quality::description);
		ADD_RESOLUTION("Job Template", "printer-resolution", tags::resolution, false, false, false);
		BEGIN_COLLECTION("Job Template", "separator-sheets", tags::begCollection, false, false, false);
			ADD_KEYWORD("Job Template", "separator-sheets.media", tags::keyword, NAME_MAX, false, false, false, ipp::s_media_keywords);
		END_COLLECTION();
		ADD_KEYWORD("Job Template", "sides", tags::keyword, KEYWORD_MAX, false, false, false, ipp::s_sides_keywords);
		ADD_STRING("Operation", "attributes-charset", tags::charset, CHARSET_MAX, false, false, false);
		ADD_STRING("Operation", "attributes-natural-language", tags::naturalLanguage, NATURAL_LANGUAGE_MAX, false, false, false);
		ADD_KEYWORD("Operation", "compression", tags::keyword, KEYWORD_MAX, false, false, false, ipp::s_compression_keywords);
		ADD_STRING("Operation", "detailed-status-message", tags::textWithoutLanguage, TEXT_MAX, false, false, false);
		ADD_STRING("Operation", "document-access-error", tags::textWithoutLanguage, TEXT_MAX, false, false, false);
		ADD_STRING("Operation", "document-format", tags::mimeMediaType, MIME_MEDIA_TYPES_MAX, false, false, false);
		ADD_STRING("Operation", "document-name", tags::nameWithoutLanguage, NAME_MAX, false, false, false);
		ADD_STRING("Operation", "document-natural-language", tags::naturalLanguage, NATURAL_LANGUAGE_MAX, false, false, false);
		ADD_BOOLEAN("Operation", "ipp-attribute-fidelity", tags::boolean, false, false, false);
		ADD_KEYWORD("Operation", "job-hold-until", tags::keyword, NAME_MAX, false, false, false, ipp::s_job_hold_until_keywords);
		ADD_INTEGER("Operation", "job-id", tags::integer, 1, INT_MAX, false, false, false);
		ADD_INTEGER("Operation", "job-impressions", tags::integer, 0, INT_MAX, false, false, false);
		ADD_INTEGER("Operation", "job-k-octets", tags::integer, 0, INT_MAX, false, false, false);
		ADD_INTEGER("Operation", "job-media-sheets", tags::integer, 0, INT_MAX, false, false, false);
		ADD_STRING("Operation", "job-name", tags::nameWithoutLanguage, NAME_MAX, false, false, false);
		ADD_ENUM("Operation", "job-state", tags::enum_tag, false, false, false, ipp::job_state::description);
		ADD_STRING("Operation", "job-state-message", tags::textWithoutLanguage, TEXT_MAX, false, false, false);
		ADD_KEYWORD("Operation", "job-state-reasons", tags::keyword, KEYWORD_MAX, true, false, false, ipp::s_job_state_reasons_keywords);
		ADD_STRING("Operation", "job-uri", tags::uri, URI_MAX, false, false, false);
		ADD_BOOLEAN("Operation", "last-document", tags::boolean, false, false, false);
		ADD_INTEGER("Operation", "limit", tags::integer, 1, INT_MAX, false, false, false);
		ADD_STRING("Operation", "message", tags::textWithoutLanguage, 127, false, false, false);
		ADD_BOOLEAN("Operation", "my-jobs", tags::boolean, false, false, false);
		ADD_STRING("Operation", "printer-uri", tags::uri, URI_MAX, false, false, false);
		ADD_KEYWORD("Operation", "requested-attributes", tags::keyword, KEYWORD_MAX, true, false, false, ipp::s_requested_attributes_keywords);
		ADD_STRING("Operation", "requesting-user-name", tags::nameWithoutLanguage, NAME_MAX, false, false, false);
		ADD_STRING("Operation", "status-message", tags::textWithoutLanguage, 255, false, false, false);
		ADD_KEYWORD("Operation", "which-jobs", tags::keyword, KEYWORD_MAX, false, false, false, ipp::s_which_jobs_keywords);
		ADD_STRING("Printer Description", "charset-configured", tags::charset, CHARSET_MAX, false, false, false);
		ADD_STRING("Printer Description", "charset-supported", tags::charset, CHARSET_MAX, true, false, false);
		ADD_BOOLEAN("Printer Description", "color-supported", tags::boolean, false, false, false);
		ADD_KEYWORD("Printer Description", "compression-supported", tags::keyword, KEYWORD_MAX, true, false, false, ipp::s_compression_keywords);
		ADD_INTEGER("Printer Description", "copies-default", tags::integer, 1, INT_MAX, false, false, false);
		ADD_RANGE("Printer Description", "copies-supported", tags::rangeOfInteger, 1, INT_MAX, false, false, false);
		ADD_STRING("Printer Description", "document-format-default", tags::mimeMediaType, MIME_MEDIA_TYPES_MAX, false, false, false);
		ADD_STRING("Printer Description", "document-format-supported", tags::mimeMediaType, MIME_MEDIA_TYPES_MAX, true, false, false);
		ADD_ENUM("Printer Description", "finishings-default", tags::enum_tag, true, false, false, ipp::finishings::description);
		ADD_ENUM("Printer Description", "finishings-supported", tags::enum_tag, true, false, false, ipp::finishings::description);
		ADD_STRING("Printer Description", "generated-natural-language-supported", tags::naturalLanguage, NATURAL_LANGUAGE_MAX, true, false, false);
		ADD_KEYWORD("Printer Description", "ipp-versions-supported", tags::keyword, KEYWORD_MAX, true, false, false, ipp::s_ipp_versions_keywords);
		ADD_KEYWORD("Printer Description", "job-hold-until-default", tags::keyword, NAME_MAX, false, false, false, ipp::s_job_hold_until_keywords);
		ADD_KEYWORD("Printer Description", "job-hold-until-supported", tags::keyword, NAME_MAX, true, false, false, ipp::s_job_hold_until_keywords);
		ADD_RANGE("Printer Description", "job-impressions-supported", tags::rangeOfInteger, 0, INT_MAX, false, false, false);
		ADD_RANGE("Printer Description", "job-k-octets-supported", tags::rangeOfInteger, 0, INT_MAX, false, false, false);
		ADD_RANGE("Printer Description", "job-media-sheets-supported", tags::rangeOfInteger, 0, INT_MAX, false, false, false);
		ADD_INTEGER("Printer Description", "job-priority-default", tags::integer, 1, 100, false, false, false);
		ADD_INTEGER("Printer Description", "job-priority-supported", tags::integer, 1, 100, false, false, false);
		ADD_KEYWORD("Printer Description", "job-sheets-default", tags::keyword, NAME_MAX, false, false, false, ipp::s_job_sheets_keywords);
		ADD_KEYWORD("Printer Description", "job-sheets-supported", tags::keyword, NAME_MAX, true, false, false, ipp::s_job_sheets_keywords);
		ADD_KEYWORD("Printer Description", "media-default", tags::keyword, NAME_MAX, false, true, false, ipp::s_media_keywords);
		ADD_KEYWORD("Printer Description", "media-ready", tags::keyword, NAME_MAX, true, false, false, ipp::s_media_ready_keywords);
		ADD_KEYWORD("Printer Description", "media-supported", tags::keyword, NAME_MAX, true, false, false, ipp::s_media_keywords);
		ADD_KEYWORD("Printer Description", "multiple-document-handling-default", tags::keyword, KEYWORD_MAX, false, false, false, ipp::s_multiple_document_handling_keywords);
		ADD_KEYWORD("Printer Description", "multiple-document-handling-supported", tags::keyword, KEYWORD_MAX, true, false, false, ipp::s_multiple_document_handling_keywords);
		ADD_BOOLEAN("Printer Description", "multiple-document-jobs-supported", tags::boolean, false, false, false);
		ADD_INTEGER("Printer Description", "multiple-operation-time-out", tags::integer, 1, INT_MAX, false, false, false);
		ADD_STRING("Printer Description", "natural-language-configured", tags::naturalLanguage, NATURAL_LANGUAGE_MAX, false, false, false);
		ADD_INTEGER("Printer Description", "number-up-default", tags::integer, 1, INT_MAX, false, false, false);
		ADD_RANGE("Printer Description", "number-up-supported", tags::rangeOfInteger, 1, INT_MAX, false, false, false);
		ADD_ENUM("Printer Description", "operations-supported", tags::enum_tag, true, false, false, ipp::operations::description);
		ADD_ENUM("Printer Description", "orientation-requested-default", tags::enum_tag, false, true, false, ipp::orientation_requested::description);
		ADD_ENUM("Printer Description", "orientation-requested-supported", tags::enum_tag, true, false, false, ipp::orientation_requested::description);
		ADD_BOOLEAN("Printer Description", "page-ranges-supported", tags::boolean, false, false, false);
		ADD_KEYWORD("Printer Description", "pdl-override-supported", tags::keyword, KEYWORD_MAX, false, false, false, ipp::s_pdl_override_keywords);
		ADD_ENUM("Printer Description", "print-quality-default", tags::enum_tag, false, false, false, ipp::print_quality::description);
		ADD_ENUM("Printer Description", "print-quality-supported", tags::enum_tag, true, false, false, ipp::print_quality::description);
		ADD_DATETIME("Printer Description", "printer-current-time", tags::dateTime, false, false, false);
		ADD_STRING("Printer Description", "printer-driver-installer", tags::uri, URI_MAX, false, false, false);
		ADD_STRING("Printer Description", "printer-info", tags::textWithoutLanguage, 127, false, false, false);
		ADD_STRING("Printer Description", "printer-location", tags::textWithoutLanguage, 127, false, false, false);
		ADD_STRING("Printer Description", "printer-make-and-model", tags::textWithoutLanguage, 127, false, false, false);
		ADD_STRING("Printer Description", "printer-more-info-manufacturer", tags::uri, URI_MAX, false, false, false);
		ADD_STRING("Printer Description", "printer-name", tags::nameWithoutLanguage, 127, false, false, false);
		ADD_RESOLUTION("Printer Description", "printer-resolution-default", tags::resolution, false, false, false);
		ADD_RESOLUTION("Printer Description", "printer-resolution-supported", tags::resolution, false, false, false);
		ADD_STRING("Printer Description", "reference-uri-schemes-supported", tags::uriScheme, URI_SCHEME_MAX, true, false, false);
		ADD_KEYWORD("Printer Description", "sides-default", tags::keyword, KEYWORD_MAX, false, false, false, ipp::s_sides_keywords);
		ADD_KEYWORD("Printer Description", "sides-supported", tags::keyword, KEYWORD_MAX, true, false, false, ipp::s_sides_keywords);
		ADD_KEYWORD("Printer Description", "uri-authentication-supported", tags::keyword, KEYWORD_MAX, true, false, false, ipp::s_uri_authentication_keywords);
		ADD_KEYWORD("Printer Description", "uri-security-supported", tags::keyword, KEYWORD_MAX, true, false, false, ipp::s_uri_security_keywords);
		ADD_INTEGER("Printer Status", "pages-per-minute", tags::integer, 0, INT_MAX, false, false, false);
		ADD_INTEGER("Printer Status", "pages-per-minute-color", tags::integer, 0, INT_MAX, false, false, false);
		ADD_BOOLEAN("Printer Status", "printer-is-accepting-jobs", tags::boolean, false, false, false);
		ADD_STRING("Printer Status", "printer-message-from-operator", tags::textWithoutLanguage, 127, false, false, false);
		ADD_STRING("Printer Status", "printer-more-info", tags::uri, URI_MAX, false, false, false);
		ADD_ENUM("Printer Status", "printer-state", tags::enum_tag, false, false, false, ipp::printer_state::description);
		ADD_STRING("Printer Status", "printer-state-message", tags::textWithoutLanguage, TEXT_MAX, false, false, false);
		ADD_KEYWORD("Printer Status", "printer-state-reasons", tags::keyword, KEYWORD_MAX, true, false, false, ipp::s_printer_state_reasons_keywords);
		ADD_INTEGER("Printer Status", "printer-up-time", tags::integer, 1, INT_MAX, false, false, false);
		ADD_STRING("Printer Status", "printer-uri-supported", tags::uri, URI_MAX, true, false, false);
		ADD_INTEGER("Printer Status", "queued-job-count", tags::integer, 0, INT_MAX, false, false, false);
		ADD_KEYWORD("Printer Description", "epcl-version-supported", tags::keyword, KEYWORD_MAX, true, false, false, ipp::s_epcl_version_keywords);
		ADD_STRING("Printer Description", "marker-colors", tags::nameWithoutLanguage, NAME_MAX, true, false, false);
		ADD_STRING("Printer Description", "marker-names", tags::nameWithoutLanguage, NAME_MAX, true, false, false);
		ADD_INTEGER("Printer Description", "marker-levels", tags::integer, -3, 100, true, false, false);
		ADD_INTEGER("Printer Description", "marker-high-levels", tags::integer, 0, 100, true, false, false);
		ADD_INTEGER("Printer Description", "marker-low-levels", tags::integer, 0, 100, true, false, false);
		ADD_KEYWORD("Printer Description", "marker-types", tags::keyword, KEYWORD_MAX, true, false, false, ipp::s_marker_types_keywords);
		ADD_KEYWORD("Printer Description", "pclm-compression-method-preferred", tags::keyword, KEYWORD_MAX, true, false, false, ipp::s_pclm_compression_method_preferred_keywords);
	}
}	//namespace ipp

#endif	//!IPP_SUPPORTS_2_0_ATTRIBUTES
